#!/usr/bin/env python3

import natsort
import re
import os
import sys
import shutil

from numpy import equal

sys.stderr.close()

def createFileList():
    files = list(filter(lambda x: os.path.isfile(x),os.listdir()))
    return files

def validateFiles(files : list):
    return not(len(files) <= 0)

def extentionCreate(files : list):
    extentionl = files[0].split(".")
    if len(extentionl) == 1:
        print("Some video files do not have extentions")
        yn = input("Would you like to manually specify an extention? [y/n]: ")
        if yn.lower() != "y":
            return ""
        else:
            extention = input("Input your prefered extention: ")
    else:
        extention = str(extentionl[len(extentionl)-1])
    return extention

def createName():
    name = input("What would you like the files to be called?: ")
    while not(validateName(name)):
        name = input("What would you like the files to be called?: ")
    return name.lstrip()

def validateName(name : str):
    return not(name == None or name == "" or re.match(r'^\s+',name) or "/" in name or "!" in name)
    
def createDictionary(files : list):
    filesmap = {}
    for file in files:
       filesmap[file.lower()] = file
    return filesmap 

def sortKeys(filesmap : dict):
    return natsort.natsorted(filesmap.keys())

def createSeason():
    season = input("What season do the episodes belong to?: ")
    while not(season.isdigit()):
        season = input("What season do the episodes belong to?: ")
    return int(season)


def previewFiles(sortedkeys : dict, filesmap : list, name : str, season : str, extention : str):
    e=1
    for item in sortedkeys:
        print(filesmap.get(item) + " ----> " + name + " S" +  str(season) + "E" + str(e) + "." + extention)
        e += 1

def warnUser():
    yn = input("\n***WARNING*** All changes to the files are permantent.\n Would you like to proceed? [y/n]: ")
    return (yn.lower() == "y")

def renameFiles(sortedkeys : list, name : str, season : str, extention : str, filesmap : dict):
    e=1
    for file in sortedkeys:
        episodename = name + " S" + str(season) + "E" + str(e) + "." + extention 
        os.rename(str(filesmap.get(file)), str(episodename))
        e+=1

def moveFiles(name : str, season : str, confirmation : bool):
    if confirmation:
        yn = input("Would you like organize the files in a the plex folder format [y/n]?: ")
        if yn.lower() != "y":
            return
    files = list(filter(lambda x: os.path.isfile(x),os.listdir()))
    os.makedirs(name+ "/" + "Season " + str(season),777,True)
    for episode in files:
        shutil.move(f"{episode}",f"{name}/Season {season}/{episode}")



if len(sys.argv) <= 1:
    print("Script has started")
    files = createFileList()
    if not(validateFiles(files)):
        exit(1)
    extention = extentionCreate(files)
    if extention == "":
        exit(1)
    name = createName()
    filesmap = createDictionary(files)
    sortedkeys = sortKeys(filesmap)
    season = createSeason()
    previewFiles(sortedkeys,filesmap,name,season,extention)
    warnUser()
    renameFiles(sortedkeys,name,season,extention,filesmap)
    moveFiles(name,season, True)
    print("Script executed sucesfully")
    exit(0)
elif sys.argv[1] == "-n" and type(sys.argv[2]) is str and  sys.argv[3] == "-s" and type(sys.argv[4]) is str and sys.argv[5] == "-y":
    print("Script has started")
    files = createFileList()
    if not(validateFiles(files)):
        exit(1)
    extention = extentionCreate(files)
    if extention == "":
        exit(1)
    name = sys.argv[2]
    filesmap = createDictionary(files)
    sortedkeys = sortKeys(filesmap)
    season = int(sys.argv[4])
    previewFiles(sortedkeys,filesmap,name,season,extention)
    renameFiles(sortedkeys,name,season,extention,filesmap)
    moveFiles(name,season,False)
    print("Script executed sucesfully")
    exit(0)
elif sys.argv[1] == "-n" and type(sys.argv[2]) is str and  sys.argv[3] == "-s" and type(sys.argv[4]) is str:
    print("Script has started")
    files = createFileList()
    if not(validateFiles(files)):
        exit(1)
    extention = extentionCreate(files)
    if extention == "":
        exit(1)
    name = sys.argv[2]
    filesmap = createDictionary(files)
    sortedkeys = sortKeys(filesmap)
    season = int(sys.argv[4])
    previewFiles(sortedkeys,filesmap,name,season,extention)
    warnUser()
    renameFiles(sortedkeys,name,season,extention,filesmap)
    moveFiles(name,season,False)
    print("Script executed sucesfully")
    exit(0)
else:
    print("Usage: plexft [-n <NAME> -s <NUMBER>] [-n <NAME> -s <NUMBER> -y]")
    print("-n <NAME> -s <NUMBER>: Will specify the name of the modified files and the season number they belong to.")
    print("-n <NAME> -s <NUMBER> -y: Will specify the name of the modified files and the season number they belong to and will bybass all user validation if no errors are present in arguments")
